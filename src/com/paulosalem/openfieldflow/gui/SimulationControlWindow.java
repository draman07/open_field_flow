/*
 * Open Field Flow - A particle system simulator in which particles 
 * flow through  and interact with a vector field.
 * 
 * Copyright (C) 2012  Paulo Salem (paulosalem@paulosalem.com)
 *
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

package com.paulosalem.openfieldflow.gui;

import com.paulosalem.openfieldflow.domain.Scenario;
import com.paulosalem.openfieldflow.domain.VectorFieldScenario;
import com.paulosalem.openfieldflow.domain.VectorFieldScenario.FieldCondition;
import com.paulosalem.openfieldflow.engine.ParticleSystemSimulatorEngine;
import com.paulosalem.openfieldflow.engine.DesktopInteractionSimulationStrategy;
import com.paulosalem.openfieldflow.engine.SimulationStrategy.RepositionMethod;
import com.paulosalem.openfieldflow.util.ColorHelper;
import com.paulosalem.openfieldflow.util.ColorScheme;
import java.awt.Color;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JColorChooser;
import javax.swing.SpinnerNumberModel;
import javax.swing.UIManager;

/**
 *
 * @author  Paulo
 */
public class SimulationControlWindow extends javax.swing.JFrame {
    

    ParticleSystemSimulatorEngine engine = new ParticleSystemSimulatorEngine();
    
    FieldCondition fieldCondition = FieldCondition.RANDOM;
    
    Color heatColor = new Color(255, 1, 1);
    
    /** Creates new form SimulationControlWindow */
    public SimulationControlWindow() {
        initComponents();
        
        // Center window
        Rectangle screen = getGraphicsConfiguration().getBounds();
        this.setLocation((int)(screen.getWidth() - this.getWidth())/2, 
                         (int)(screen.getHeight() - this.getHeight())/2);

        
        // Spinners
        ((SpinnerNumberModel)this.spnParticles.getModel()).setMinimum(new Integer(0));
        ((SpinnerNumberModel)this.spnParticles.getModel()).setValue(new Integer(1000));
        
        // Colors
        pnlHeatColor.setBackground(heatColor);
        
        
        // Initial condition
        DefaultComboBoxModel dcm = new DefaultComboBoxModel();
        dcm.addElement(FieldCondition.RANDOM);
        dcm.addElement(FieldCondition.STATIC);
        dcm.addElement(FieldCondition.UP);
        dcm.addElement(FieldCondition.DOWN);
        dcm.addElement(FieldCondition.LEFT);
        dcm.addElement(FieldCondition.RIGHT);
        cmbInitialCondition.setModel(dcm);
        
        
        
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRunSimulation = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        spnParticles = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        cmbInitialCondition = new javax.swing.JComboBox();
        chkPreventConvergence = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        pnlHeatColor = new javax.swing.JPanel();
        btnChangeHeatColor = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        sldResistanceFactor = new javax.swing.JSlider();
        sldInfluenceFactor = new javax.swing.JSlider();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnuQuit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mnuAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Open Field Flow");
        setLocationByPlatform(true);
        setResizable(false);

        btnRunSimulation.setText("Run simulation");
        btnRunSimulation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunSimulationActionPerformed(evt);
            }
        });

        jLabel1.setText("<html>Number of particles</html>");

        jLabel4.setText("Initial condition");

        cmbInitialCondition.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Random", "Static", "Going up", "Going down", "Going left", "Going right" }));
        cmbInitialCondition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbInitialConditionActionPerformed(evt);
            }
        });

        chkPreventConvergence.setText("Prevent convergence");
        chkPreventConvergence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPreventConvergenceActionPerformed(evt);
            }
        });

        jLabel3.setText("Color");

        pnlHeatColor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout pnlHeatColorLayout = new javax.swing.GroupLayout(pnlHeatColor);
        pnlHeatColor.setLayout(pnlHeatColorLayout);
        pnlHeatColorLayout.setHorizontalGroup(
            pnlHeatColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlHeatColorLayout.setVerticalGroup(
            pnlHeatColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 27, Short.MAX_VALUE)
        );

        btnChangeHeatColor.setText("Change...");
        btnChangeHeatColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeHeatColorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkPreventConvergence)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(pnlHeatColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnChangeHeatColor))
                            .addComponent(cmbInitialCondition, 0, 507, Short.MAX_VALUE)
                            .addComponent(spnParticles, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(spnParticles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbInitialCondition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnChangeHeatColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(pnlHeatColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(chkPreventConvergence)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Basic options", jPanel2);

        jLabel5.setText("Resistance factor");

        jLabel6.setText("Influence factor");

        sldResistanceFactor.setMajorTickSpacing(100);
        sldResistanceFactor.setMaximum(1000);
        sldResistanceFactor.setMinorTickSpacing(10);
        sldResistanceFactor.setPaintLabels(true);
        sldResistanceFactor.setPaintTicks(true);
        sldResistanceFactor.setValue(100);

        sldInfluenceFactor.setMajorTickSpacing(50);
        sldInfluenceFactor.setMaximum(200);
        sldInfluenceFactor.setMinorTickSpacing(10);
        sldInfluenceFactor.setPaintLabels(true);
        sldInfluenceFactor.setPaintTicks(true);
        sldInfluenceFactor.setValue(10);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sldResistanceFactor, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
                    .addComponent(sldInfluenceFactor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sldResistanceFactor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sldInfluenceFactor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Vector field", jPanel3);

        jMenu1.setText("File");

        mnuQuit.setText("Quit");
        mnuQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuQuitActionPerformed(evt);
            }
        });
        jMenu1.add(mnuQuit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        mnuAbout.setText("About this software...");
        mnuAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAboutActionPerformed(evt);
            }
        });
        jMenu2.add(mnuAbout);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRunSimulation)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRunSimulation)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRunSimulationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunSimulationActionPerformed
        startSimulation();
    }//GEN-LAST:event_btnRunSimulationActionPerformed

    private void mnuQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuQuitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mnuQuitActionPerformed

    private void mnuAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAboutActionPerformed
        AboutWindow aw = new AboutWindow(this);
        aw.setVisible(true);
    }//GEN-LAST:event_mnuAboutActionPerformed

    private void btnChangeHeatColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeHeatColorActionPerformed
        heatColor = JColorChooser.showDialog(this, "Select heat color", heatColor);
        pnlHeatColor.setBackground(heatColor);
        
    }//GEN-LAST:event_btnChangeHeatColorActionPerformed

    private void cmbInitialConditionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbInitialConditionActionPerformed
        fieldCondition = (FieldCondition)cmbInitialCondition.getSelectedItem();
    }//GEN-LAST:event_cmbInitialConditionActionPerformed

    private void chkPreventConvergenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPreventConvergenceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkPreventConvergenceActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        // Try to pick a look and feel
        try {
            //UIManager.setLookAndFeel("org.jvnet.substance.skin.SubstanceBusinessBlackSteelLookAndFeel");
            
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

        } catch (Exception ex) {
            // No problem, just stay with the default
        }
        
        
          java.awt.EventQueue.invokeLater(new Runnable() {

                public void run() {
                    new SimulationControlWindow().setVisible(true);
                }
            });

    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChangeHeatColor;
    private javax.swing.JButton btnRunSimulation;
    private javax.swing.JCheckBox chkPreventConvergence;
    private javax.swing.JComboBox cmbInitialCondition;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JMenuItem mnuAbout;
    private javax.swing.JMenuItem mnuQuit;
    private javax.swing.JPanel pnlHeatColor;
    private javax.swing.JSlider sldInfluenceFactor;
    private javax.swing.JSlider sldResistanceFactor;
    private javax.swing.JSpinner spnParticles;
    // End of variables declaration//GEN-END:variables


    private void startSimulation(){
        
        SimulationCanvasWindow cw = new SimulationCanvasWindow(engine, ColorHelper.scale(heatColor, -0.7));
        
        GraphicsDevice gd = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();
        gd.setFullScreenWindow(cw);
        int w = gd.getFullScreenWindow().getWidth();
        int h = gd.getFullScreenWindow().getHeight();
        int n = (Integer)((SpinnerNumberModel)spnParticles.getModel()).getValue();
        boolean preventConvergence = this.chkPreventConvergence.isSelected();


        Scenario scenario = buildVectorFieldScenario(w, h, n, preventConvergence);
        int regionSideSize = 11;
        RepositionMethod repositionMethod = RepositionMethod.Torus;

        
        DesktopInteractionSimulationStrategy sss = 
                new DesktopInteractionSimulationStrategy(scenario, preventConvergence, repositionMethod);
        
        cw.setStrategy(sss);
        // cw.setResizable(false); // TODO Removed because it causes problem on Gnome!

        int largerSide = Math.max(w, h);

        engine.start(sss, cw, regionSideSize, largerSide);
    }

    private Scenario buildVectorFieldScenario(int width, int height, int n, boolean preventConvergence){
        ColorScheme cs = new ColorScheme();
        cs.setHeatColor(heatColor);
        
        double resistanceFactor = 1.0 / (sldResistanceFactor.getValue());
        double influenceFactor = (double)sldInfluenceFactor.getValue() / (double)sldInfluenceFactor.getMaximum() ;
        
        

        Scenario scenario = new VectorFieldScenario(n, width, height, 
            20, resistanceFactor, influenceFactor,
            fieldCondition, cs);
        
        return scenario;

    }
    
    
}
